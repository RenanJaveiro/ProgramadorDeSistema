<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAD4HwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAH79J
        REFUeJztnQl41Na1xy0FmiZNscHGYzDEhrAFPJLGIQE80szYAWOD2TGEAAF7pNGM7SRA9hASkjRpWsIr
        7cv2ujdL19cl3dLme93b1/29pstLt9fXNm3TpiFNQ3Zs552j0TiDGbABjzWj+/993/k0i0aje3Tu/y66
        96qkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI4Tkmhg0VYyTdm+dIq9dUS4fsGrFSTgAg7h5
        xVQ587p7WUCMvGCGtTPjutpi6mpzXA++yevzAcArUtHQR2xDe9WOaK92RUMfS4SV0n2dNf4VgiUTSyVK
        7HuS0dAfKfF/oO2+eCQ4Ntpc6vWpATBqcCZPGOqCVCx0mLb9lqH2kgD81TbUuXa9T2sCqdqAtK1RG0MJ
        7qME91ENoI9E4FdUG5hit+n+TDQAOeC8wAUhZ36y1ygv9FJh+ERcV2aZUdWfeYET3XFe/emWobxmpUWg
        nwTgr6YenNd+7jn+TDQAg7hwYqmc0LWZJAAvWK4A8DYZ0X4RD88L7Gqd5M+84AjAouAZlv66ACQiaq8d
        US/qmV/lz0QDkEWLXiaZDUoplfaPZkr/jADQ9nvWIvWMTdXl/swLLABU1TnLSie4z018PwnAd6kWEFjV
        MN6fCQfC8y6rtuSK9kUSVfGnU8n/hezMn8kHVDP+mlWvSImaSq9PNz+wACRi6vhsAbCcxGu9tqHu3nR+
        9Wl2rU87QICwGEtKpWR7lWQawQkU8w+SALhx/7rRZ/22oX3e63PNK0uo7dO5SKl0ez37sqo/aQdE1A9b
        uqbYiwJyqiXASggxAEUJF3Zrl1XIZNLWRedyx/d6auP/NkFxPjjzs6UiIYp/7f61kybIQx+9SIkuLZM7
        Filn22knHFEFcpwS4eaAxh2Dn6SmwrLW2ap0o3G+45Cr10yWL26dKKdQQwAFxAZqr69vqpB3rKqSe6ZV
        SXpzqbSXYnbb/PNOs4xghGq2N1DG/2WumM+2ZDTUR/u8PUJ5xOs05Y1Ua0CO68HZlNicKpjdIUIiwL2i
        h2j772Y4uNvUlbWdulJLdtqm6gqpMVwmX768Xl7fUiFzzYKFIXm0OEhZVrKyary896L58pWr2xzj89m5
        cpJ83cXVcoyOx8fZPKVC4mNlLEctBAI08gz41CZ/Z/ufr0mTWiZHlpTKd3bUyLdunion6brxtetZPmPg
        WrJdvqLe+Zz3z8TDoPa0dAw7gsHnsJjOYfeGauf4ezfOd2Jlg9tRlzTOP9OMqLOper+MCq0eit99qVjo
        W1SbfTmVztR9x8v4WQLQm4xqO3avr/avAPBF6gwH61NRrfd4ApAtBDxAgtWTnMPOZEf2kTA8Sc79UXdj
        6Iv0+kH67G5LV+60DOU2ugg3W7q6l3631zSUG0w9eAW97qbPzXhY2UwXaq0ZVpaRkDR26MGGznBdvdmg
        zqXzmt6p102mi1m+7fw5b+5qqj9j0wVzxqYuzF3j4CBZFkiLBgdclAI029a2lTsBu8+1/WTJlnTgsl1P
        F5q/5/14/0ZXgDKWHYDHsxyiNxTHDPzBJI/zv5m083lz5hycvh0rq5z0ZacxY+wv/m2u6m4yNkfepte9
        gQT/zE49OC7eUFdJ1+7seDg4i14H6TqF6Dqe3xlWGjoblEhHQ10TvV5K+y+na7qKtuto/40UD5up4NhG
        7zvJEhQTXRQfl9H130Wvr6LvryPbQ7aXjT7f68RN2m6h97fT9u0UOwcovu6jeLuf4u1TXbHQ1+n1T8j+
        RKX7KwlDeS3pxCdlYMrszhgXXR1Wps+Oc+cYEW1LSg/4VwBYueli6ZyZhyMA2c0D63VByAwiOkwX9nDm
        vevwAbPTDqWahNbfRbUJx2Kh/u7Gese6YvXOe/7cqW1Etf50PwR3xtD/pG9Vpk1X6PjKKwldfY6O/TTZ
        nxOG9n9kvyal/xnt/wNq232TXn+Z7GGyT1BgPGBHtffS8e4hewcd/+20vY3OaQ9tr6P3VyQj6mWJiNJN
        /5GkY5r0XQf9BwWtusU01E30nxs4oC09uJrer7DCahuLFx27hX7XTEG6hERuMe3fREEXo+PkNNovRkIY
        owyR2+j7I35Dx6L0NNH/L7bofxK6soz+d0XcqFvtnI+hbiDbbBvadmq2WXTuSUrzZWRXUtquT0ZCt9pR
        ldP7TrJ30+cPkH2S9n2Ejvs18tf36T9+Tt/9L/32L5Seg7Q9RGk/7Pjd9X3mevC1OeI6utcybXQ9Y/UD
        17XbfT/wffRIS7nHSkayrrdriUEx5PZVZcWccjhtanbc9VlHxuiw43pQQfcapb/tJAS9eNjZPombAM2s
        lifjqCEcmBc7Kijcfgq31zZtTvAcYb1kfUOZ87uI0xk6YEedg67w7aGcgZk5H0fwjKMD2j3+wD7HtUy6
        3DRlPrOO+E9lsG8Gztv1wfHS25vto+zzHXx++byepxAHIxavueLX3Tb69hYg0zKzTOYShEqIE6oBiGBe
        B/gpmuf+K2ZjH1IN6XnaNnidR/MKV28okZ3JY9wKgcFENCvdr/X7eFjRTD/XALh6Q4ndwW06CAAMljaq
        FfemYqEfxXV19k3r5vq3D4CxdPV6GzUAGGzASAD6umL1X46H1bN3rIj4XAAMda+fBaAQOpWKxeCr1/2Q
        imifsMJKYPeGav8KgNsH8LZi7zji8+f521a6B9y9VRXq5eGcCTdg7Yj6ajKiHqK23UFq8jyVjKoHuaOH
        vuvl75MRHug0MFCk1++Bnp2h+X65m3b37oP6En32LNnfyZ7m17ahvkTfu77SHF+5o+XcuyMDd0w8T9sI
        +Ibnwty3feG8N6+q8vGEOB4AQhfz7mIL9kyGdzM6ByG32X6ZipFq6yoPGOmi9tvSDj04i6pz46wLlLHH
        88OWcN04M6yqphHcTse+JRXV/pOOeXi4o8aKydz0pAe6RLXHyd5H/rosriuGpSsTt0Znn3Y8X8Vj2hs7
        FgUnx8PBhaahbLYM5RoeX9AVC32Dts/xmBK+Jom0GBSl/9Lxpdy+ff7cMb4eB8AjxrqioYeK4SJlSnce
        JESB9jxl+EcoYG8yw0qj3aCe2bMwJN2+ba5s1lRK0ZYyiUf2Jdqr5DWTJsj2EJOYVtM+PIQ5sbRSaq8u
        l0x9oUyZYkoiot1K//WPhH+qvuy7F6iEv5vSN+/K1W3SjliD/NiHFImHvHKBMNTsT84QvN/u9mo5FU6P
        ktuiVsjXrlwgX9p0Ho8rmUG+2kb/8Q66Vr/ODBwqptqBU6vRlRtHMq8VJDxclDLSl3kpMK+dnsvcoOnj
        ACJ7hkqtu3ik3YZZs+RL9Ikyr2a8d/MUOTl/5FV6z7ap0iWRSilhaFOSsdBHEkNMHilkc86bqvbkw2+R
        YM7h6bA8u3OkfZaqDZTsWjZJ3m/WOJNw7NaAFG9QplJpuovi7IcJd6BRofsxfVtc2TXS/ik47JZKmYLi
        B4UmAG6A8L3YV+j8HjMN9fqNC8rlvSumSDx/YTTXKODlohxfRbR3ee2XUwrqaOg/qElUOWf+WaM6tj1J
        tQS6XjzxTOrUlWl0Lg+SGPydRyMWqhBw/wY1IU0WsdH01aiTujBAAhD6DbenvXZ6VsbnUuKfVIX8LNky
        Mxws55KEMz0LgFe+ShpKKQXufycKNGiPY/103t8n3wa8GtSSEYDLzquTkjFlLNUIVLrGb+PBNoXYz8Id
        yPGwsuGSlon+nQjEcJWNe3q9vgDptqFTPXzOjmofp6qikYjUnX65USUduKAwHlTS1VzFy0Y3FdOoScsJ
        ZmeN+wu6WgNyIYxqo6ZHyepZE6TUhdMlqtlNo8y2k3z6WKKA+ghYAKip1MRT0732V97hKZQeCwBn/EPU
        RuXe6Pl2LHh6qi0gkXntmqNYvKRc4iaT14J5AgJApb/2mUJ82hOPQr2hsVpKLK2UTYNqeRFtF9kTXBB4
        LQR8S5hqACqvS+G1n/IG94zHG+ee5i4J7lVAc8fUd+K6Er22bZ50V09tCVuhcjM1QchXPXZ6nrnnGXyI
        zP+ae57Lovr4gg7kO9acLe3vqJGssMpLc3+IYuLlhIc1Aq7lUQ1gKi804rVv8sZGtUIy9bqKhCe3uJzq
        /tNk13SG55a+K1krdZ7tffV0KLaqFbIVCU6xI4V/W9BKTwn+Z0d07un89CevfTcc7grWShfrs8eSf9vp
        3B/j8R2jLQKZ25UkAGW8GpXXPskbifUB2dKVc0bztoxzMdNrDB6i/+68kAJzx7rie/4AlVD/KAYB4NVy
        Iq3FVYpxz3v3ygD3D8yktvjXE+mFQUZVAHhVIWuhcrqvBwFdujwkd+rBhbwc2Gg5110V6CPxcLC8fVVF
        UQVmhouWB3nsxGcto7BuneYwFva38MKYXvvsZHjsfYoUb1DPsA3nbsGro1hIObegvU5/3tmglstmWF2R
        HAUBsNJt/RdIAK6IXzhvjNdpPxX4dqSlq7cmCnx0YDJ9e239ynB5UQots3vdBmn1qjky1QK22G6tK99N
        gvTcCPWQ12nPO1wymLrakUxPmMmrQynjP0Xt/hXhCW+W2LxO+6nA7WnyWyJZwCPaXJ/3mQ3KDBZ6r312
        KlCclmxUyrnz1SCf/yWRZ5+7k6P+lFls1ev05xVqh19j57GN5T5c5A98e29F0wW+cKbdXsU1p0ae8FLI
        AuC8XjJ/TLE2AQazOjZB2t6gjEvyIqZ5jNn0E7K1n62qGi/7eiYg34c1w8Gb86iovNrr/7QtnHvmFetm
        +8aRW5dOlDvC82a6C6kWrABQRnnGa1+NND2rq+RN+rljeRZjvuLWEYBY6Nu3bZ0qk/kmbo+Cn3hKCf6X
        PHVmcU//TxO6enbzRTOkG1av9zq5IwYvpLo9PK/8iJK2wIyHdpP/f9V+7jlFXf3PxY7VdXJnQ3C681iv
        PPiflwPrbqz//M6VUZnMvwKwq3USTwX+YB4EwJlnbhrq2RfX++8+Kg+g6jhv3thMWr3O7McUACrFOIi9
        9lc+uHRNlRwPB+dSU+DPIy3C6dmnoYc6lp0jk/kufgfYsZ4EIBZ6ZKQmAlmZzM+rqerq9PuvmuFf55Xw
        EGqtYAXAStfAHuZr7LWf8sXOiyZxDbaBRODgSIqAe6x7uKZH5t8Y5mGO1Eb/yUhNBXZ7nv9m6Ur97s0+
        XkfNxTbUVwtZAPgRbb4eyupC6dxIYvfiSF0LdzWgO5In95i34mHLlAqJb6uMhHpy6U9VTtoqa6/YPMnr
        pI0KznqCkcIVADuqvWeJu5aBn+G7HHQtekZwWnG/aSh7uZPc108FYshxL5yq09wpp7xgpP9XUMmCfPdc
        QQtARLtXCAFYWSUlYuobKb0fTj/m7NR8Z6cnAu3xOl15hR+xfdkF88ckRmAmoDu899aF48/y/8CJLApe
        AAztbhEEgOF1Duh6TKaC6FeJU4xnXn6OBGBHiZ8fO88LZXbowYpTH1DhTOz5TDyqvGnHhiqvkzWqFL4A
        qHeJIgDMh6+fIdlRtZUy8POnMlzYWQtAVzr9MoAqJ7wCrhmuCyZPTQC45P8NtfunLqDS3+s0jTYQgMLj
        fTvPkahQO3AqMwid5cB0pb3Yh1Afl8uXh3gqsPNY8JMMMHbUISr9W3rW+FgpjwMEoPDgtQdNPVhFBdPj
        J9u0pZjuoybAUl581uv05A29uZQfC34xVXdOWADc6hWv2PveukXilfwZIACFyadumsXLtvFkrcMn0xTg
        PGHpakOyNeBv35lG8NKTbAJwu587W2atWuu/kX7DBQJQmPBDYeJ6sJJi+zuJk6gFcJ7obAgqfh5E5UBt
        9xvtE3SQO8Dk2YShLbwsKGbVPwMEoHC5asYkXrPhXF4S7USbAtwx3rmorta3g6jaJ5dLbJTYO0/GOVT6
        71jcNl7acZFYvf6DgQAULg9fMLvkwfgM7hA84dmu7jiACb5dD/DKZTMlMh4GfP+JTARyx5d/r3ORcrqx
        zMdjpIcJBKCw+cCuc0qsiFJGNdanhlvQZfazm0Jv9O2Ylu7WGRKZ3N1Y/whPfRy2MkY1Dqrm9+6c7k/H
        nCAQgMLHWDWeawFvG24tICMA7c3Vpw31QNmipUktc57umoqF/mu4E4Hctv9XE351ykkAASh87u2ZxvNd
        pg53+TZ3CHWv1+edV/heKS9smeSZe8N0SjL9uOSgCQEYAAJQHNzcOpVvCz4wnFqA67fn3Z/6O9YpgA8P
        JQCZOf5dsdC7P7Znpr8dcoJAAIqDVVUTeEFRja7XkLMF3cLuad+2/xme42yF551pGcNa0qo/GQ29mIyE
        Ku/rnuZfp5wEEIDigVdy7orWf2N4AhB6wtd+i/AowHBw6lCDgNxny71MdluxPFpqNIEAFA8HErV82/ui
        ofoCTN15mOrj0aU+HQPA7O+okeMNdeeT0h23A9DtEPkmOW0iAuloIADFA3dex9PPHHxxCAHgJcF/HF3i
        Y7/xM88tXWk73kQgN/Pzc+U7mirGofTPAQSguOBabDKqPZRIrxx0LAHgxVS/tbbNxzMBO0OVkhlWzCFq
        ANwZ8kMSinL0/OcGAlBcLFk8QbIjyhISgT8cqxbgPhPgS3dSLdnr880r5IBrj7UYSNo52mH6Po62/7GB
        ABQXqdpASerCIDUDtI8mjjEClgWgKxb6FNeSvT7fvGDXVJbEF80dQwFy+7FUMD3kV/spvQ40V0IAjgUE
        oPi4vqmaRwauJR/lvAXOTQASgId8KwCLm8ZLpjFvHAXve8gBR/UBuD3//GCPvY3Lx/vTCSMEBKD42NdZ
        Iycj6oyuaOiPuQTAfYr1+33bB3B5W73UGVaqU9HQ56wcw4AzAyEosFUeRun1+RYyEIDig+8GWAuDY8hH
        jyZyC0AvXdf7eKi81+eaFzbXB6VOPTgnFdN+fIwnAnHv/8c3hmplHjIMjg0EoDhJGQGqBWiX8t2AXH4j
        O8CL5np9nnnD1JX55IAnB1eB3Ft/L1uGstj281DIEQICUJzwVHa6budRVT/XYiH9ph7c5+uhwCQAEUro
        UY+2dqv/3+406t4UbUbn31BAAIqTtkUTJEsPvokKu+/nEgBLV273rQBwwqjtv3zwPAD3NdcAEretnoqg
        GQYQgOIluoQHBYX+dXAzwHaGCis3+3bae0vLBJkSvW3wc9T4dXdj6EnTCM6JtpR5fZpFAQSgeOGhvuSn
        tXz9svNBWgDUvV6fX97YuX6STG2fa44aBkwJp8Q/ZEXmjYUADA8IQPGSag3wYDiF73gNFgAzHLzJ6/PL
        G7zSKQnAPdnDgDOdfyQC03Yv9v9jvUcKCEDxkpwfkMxw3VkU9z/IXhfTqQHo6o0lfl0MhIf22ob26eyp
        wM7Iv1joM3pzqaSj82/YQACKm/3xGn6s+P3ZTxR2+wBu8Prc8gKPhU7qs7jt87WEW+1xHvHFYhBR1ujB
        cQiWEwACUNxc3DqRa8OXZF/D9NJ36rVen1teWBYok7ZfcO6ZlODvWq8LAFf/X+kIzzudn6ji9TkWExCA
        4qZnWlWJ8wgwZ+xL+jq6a19e7fW55YX1LRVSR0NdgBL58ywB6CMV/PQKw6djn/MIBKC42aiVS1Tdn5aK
        hn6X6QdwVwzypwDwPIAOvW5WMhr6Y2YYMGV+TvDF+80alP4nCASguOH+sEsWzHkD+erb7hBgJz+YevBK
        r88tL6wIO6ujzuuO1fNy4H2Wu+Bnz+L6M3w78CGPQACKHxaBVER7K98WT0ZC/ZQ3uCaQ9O1IQMbUlWZq
        +7wlEdHeQTWBZl8nNo9AAPyBqde9wQwHm6jk76H2f7vX55N3GlaMlzjTd0+rkhLXTkbmP0kgAP6Ab31f
        t6Va5qXv7HBADH/xLUEWAK/Po5iBAAAgMBAAAAQGAgCAwEAAABAYCAAAAgMBAEBgIAAACAwEAACBgQAA
        IDAQAAAEBgIAgMBAAAAQGAgAAAIDAQBAYCAAAAgMBAAAgYEAACAwEAAABAYCAIDAQAAAEBgIAAACAwEA
        QGAgAAAIDAQAAIGBAAAgMBAAAAQGAgCAwEAAABAYCAAAAgMBAEBgIAAACAwEAACBgQAAIDAQAAAEBgIA
        gMBAAAAQGAgAAAIDAQBAYCAAAAgMBAAAgYEAACAwEAAABAYCAIDAQAAAEBgIAAACAwEAQGAgAAAIDAQA
        AIGBAAAgMBAAAAQGAgCAwEAAABAYCAAAAgMBAEBgIAAACAwEAACBgQAAIDAQAAAEBgIAgMBAAAAQGAgA
        AAIDAQBAYCAAAAgMBAAAgYEAACAwEAAABAYCAIDAQAAAEBgIAAACAwEAQGAgAAAIDAQAAIGBAAAgMBAA
        AAQGAgCAwEAAABAYCAAAAgMBAEBgIAAACAwEAACBgQAAIDAQAAAEBgIAgMBAAAAQGAgAAAIDAQBAYCAA
        AAgMBAAAgYEAACAwEAAABAYCAIDAQAAAEBgIAAACAwEAQGAgAAAIDAQAAIGBAAAgMBAAAAQGAgCAwEAA
        ABAYCAAAAgMBAEBgIAAACAwEAACBgQAAIDAQAAAEBgIAgMBAAAAQGAgAAAIDAQBAYCAAAAgMBAAAgYEA
        ACAwEAAABAYCAIDAQAAAEBgIAAACAwEAQGAgAAAIDAQAAIGBAAAgMBAAAAQGAgCAwEAAABAYCAAAAgMB
        AEBgIAAACAwEAACBgQAAIDAQAAAEhgTgUGELgHYPBACAPEEl7EuU2QpXACLqv0EAAMgTVML2FrgAfLAx
        XAYBAGCkWbtmo+RmtoIVgFRU+/jatnIIAAAjiV1TKZlR7YxMRvM6s+cyU1f7UrHQl3aunAQBAGAkWd1U
        LpvhuqpEROsnAejzOrPnFgCltysW+v7lbfUQAABGEntppRzXlXnJaKi3oGsAUe03KS0gee0vAHyF3V4l
        m4baQgLQV6gCwOeVjKjPuqcMEQBgpFgysVQyjWB3Mt0EKFgB4O1WIzSmZ1oVBACAkcKuDUjUxn5rokAz
        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
</value>
  </data>
</root>